<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0"  xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <QtLibSuffix Condition="'$(Configuration)'=='Debug'">d</QtLibSuffix>
    <QtLibAdditionalIncludeDirectories>$([System.Text.RegularExpressions.Regex]::Replace($(QtLib), '(\w+)(;|%24)', '$(RelativeQTDIR)\include\Qt%241;').Split(';'))</QtLibAdditionalIncludeDirectories>
    <QtLibPrivateAdditionalIncludeDirectories Condition="'$(QtUsePrivate)'=='true' or '$(QtBootstrap)'=='true'">$([System.Text.RegularExpressions.Regex]::Replace($(QtLib), '(\w+)(;|%24)', '$(RelativeQTDIR)\include\Qt%241\private;').Split(';'))</QtLibPrivateAdditionalIncludeDirectories>
    <QtLibAdditionalIncludeDirectories>$(RelativeQTDIR)\include;$(QtLibAdditionalIncludeDirectories)</QtLibAdditionalIncludeDirectories>
    <QtLibAdditionalIncludeDirectories Condition="'$(QtLibPrivateAdditionalIncludeDirectories)' != ''">$(QtLibAdditionalIncludeDirectories);$(QtLibPrivateAdditionalIncludeDirectories)</QtLibAdditionalIncludeDirectories>
    <QtLibPreprocessorDefinitions>$([System.Text.RegularExpressions.Regex]::Replace($(QtLib.toUpper()), '(\w+)(;|%24)', 'QT_%241_LIB;').Split(';'))</QtLibPreprocessorDefinitions>
  </PropertyGroup>

  <Choose>
    <When Condition="'$(QtBootstrap)'!='true'">
      <PropertyGroup>
        <QtLibPreprocessorDefinitions>QT_DLL;QT_THREAD_SUPPORT;$(QtLibPreprocessorDefinitions)</QtLibPreprocessorDefinitions>
        <QtLibAdditionalDependencies>$([System.Text.RegularExpressions.Regex]::Replace($(QtLib), '(?&lt;lib&gt;\w+)(;|%24)', 'Qt%24{lib}$(QtLibSuffix)4.lib;').Split(';'))</QtLibAdditionalDependencies>

        <CppCleanDependsOn>
          _QtCleanupPrepareTask;
          $(CppCleanDependsOn);
          _QtCleanupTask;
        </CppCleanDependsOn>

        <PostBuildEventDependsOn>
          $(PostBuildEventDependsOn);
          _QtCopyLib;
        </PostBuildEventDependsOn>

        <BeforeClCompileTargets>
          $(BeforeClCompileTargets);
          _QtCompileTask;
        </BeforeClCompileTargets>

      </PropertyGroup>

      <ItemGroup>
        <PropertyPageSchema Include="$(MSBuildThisFileDirectory)$(MSBuildThisFileName).xml" />

        <AvailableItemName Include="QtUic" />
        <AvailableItemName Include="QtQrc">
          <Targets>_QtCompileTask</Targets>
        </AvailableItemName>
        <AvailableItemName Include="QtQrcInclude" />
        <AvailableItemName Include="ClInclude">
          <Targets>_QtCompileTask</Targets>
        </AvailableItemName>

        <QtQrc Include="$(QtIntDir)$(QtQrcIncludeFileName)" Condition="'@(QtQrcInclude)' != ''" />

        <QtLib Include="$(QtLib)"/>
      </ItemGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <QtLibPreprocessorDefinitions>Z_PREFIX;QT_BOOTSTRAPPED;QT_USE_QSTRINGBUILDER;QT_NO_FOREACH;QT_VERSION_STR="$(QT_VERSION)";QT_VERSION_MAJOR=$(QT_VERSION_MAJOR);QT_VERSION_MINOR=$(QT_VERSION_MINOR);QT_VERSION_PATCH=$(QT_VERSION_PATCH);$(QtLibPreprocessorDefinitions)</QtLibPreprocessorDefinitions>
        <QtLibPreprocessorDefinitions Condition="'$(Configuration)'=='Release'">QT_NO_DEBUG;$(QtLibPreprocessorDefinitions)</QtLibPreprocessorDefinitions>
        <QtLibAdditionalIncludeDirectories>$(RelativeQTDIR)\src\build-bootstrap;$(QtLibAdditionalIncludeDirectories)</QtLibAdditionalIncludeDirectories>
        <QtLibAdditionalDependencies>Netapi32.lib;$(QtLibAdditionalDependencies)</QtLibAdditionalDependencies>
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <ItemDefinitionGroup Condition="'$(SeparateWorker)' != 'true'">
    <ClCompile>
      <AdditionalIncludeDirectories>$(QtLibAdditionalIncludeDirectories);$(QtIntDir);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>$(QtLibPreprocessorDefinitions);%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <AdditionalDependencies>%(AdditionalDependencies);$(QtLibAdditionalDependencies)</AdditionalDependencies>
    </Link>
    <QtLib>
      <Library>Qt%(Identity)$(QtLibSuffix)4.dll</Library>
    </QtLib>
  </ItemDefinitionGroup>

  <ItemDefinitionGroup Condition="'$(SeparateWorker)' == 'true'">
    <QtUic>
      <GeneratedFile>$(QtIntDir)ui_%(Filename).h</GeneratedFile>
      <ProjectDir>$(ProjectDir)</ProjectDir>
      <ExecutionDescription>UIC %(Identity)</ExecutionDescription>
      <Tool>$(QTDIR)/bin/uic.exe</Tool>
    </QtUic>

    <QtQrc>
      <GeneratedFile>$(QtIntDir)qrc_%(Filename).cpp</GeneratedFile>
      <ProjectDir>$(ProjectDir)</ProjectDir>
      <ExecutionDescription>UIC %(Identity)</ExecutionDescription>
      <Tool>$(QTDIR)/bin/rcc.exe</Tool>
    </QtQrc>

    <QtMoc>
      <!--<CommandLineTemplate>cd $(ProjectDir) &amp; $(QTDIR)/bin/moc.exe &quot;[Inputs]&quot; [AllOptions] [AdditionalOptions]</CommandLineTemplate>-->
      <HeaderGeneratedFile>$(QtIntDir)moc_%(Filename).cpp</HeaderGeneratedFile>
      <SourceGeneratedFile>$(QtIntDir)%(Filename).moc</SourceGeneratedFile>
      <ProjectDir>$(ProjectDir)</ProjectDir>
      <ExecutionDescription>MOC %(Identity)</ExecutionDescription>
      <Tool>$(QTDIR)/bin/moc.exe</Tool>

      <IncludePaths>$(QtMocIncludePaths)</IncludePaths>
      <PreprocessorDefinitions>$([System.String]::new('$(QtMocPreprocessorDefinitions)').Replace('%253D', '=').Replace('%2525', '%25').Split(';'))</PreprocessorDefinitions>
      <UndefinePreprocessorDefinitions>$(QtMocUndefinePreprocessorDefinitions)</UndefinePreprocessorDefinitions>
      <Param>-D$([System.String]::new('$(QtMocPreprocessorDefinitions)').Replace('%253D', '=').Replace('%2525', '%25').Replace(';;', ';').Trim(';').Replace(';', ' -D')) -I$([System.String]::new('$(QtMocIncludePaths)').Replace(';;', ';').Replace('\;', ';').Trim(';').Trim('\').Replace(';', ' -I'))</Param>
    </QtMoc>
  </ItemDefinitionGroup>

  <Import Project="$(MSBuildProjectDirectory)\$(QtCacheFileName)" Condition="'$(QtCacheFileName)' != '' and Exists('$(MSBuildProjectDirectory)\$(QtCacheFileName)')" />

  <!--<UsingTask TaskName="QtMoc"
             TaskFactory="XamlTaskFactory"
             AssemblyName="Microsoft.Build.Tasks.v4.0">
    <Task>$(MSBuildThisFileDirectory)$(MSBuildThisFileName).xml</Task>
  </UsingTask>-->













<!-- Compile Tasks -->
  <Target Name="_QtCompileTask"
          DependsOnTargets="_QtMakeDirTask;_QtPrepareTask;_QtSelectTask;_QtRunTask;_QtProcessResultTask;_QtAddSourceTask;_QtCheckCacheTask;_QtWriteCacheTask;_QtAddSourceTask" />

<!-- Cleanup Tasks -->
  <Target Name="_QtCleanupPrepareTask"
          DependsOnTargets="_QtPrepareTask;_QtUicCleanupPrepareTask;_QtQrcCleanupPrepareTask;_QtMocCleanupPrepareTask" />
  <Target Name="_QtCleanupTask"
          DependsOnTargets="_QtUicCleanupTask;_QtQrcCleanupTask;_QtMocCleanupTask;_QtDeleteTask" />

  <Target Name="_QtMakeDirTask"
          Condition="!Exists($(QtIntDir))">
    <MakeDir Directories="$(QtIntDir)" />
  </Target>

  <Target Name="_QtDeleteTask">
    <Delete Files="$(QtCacheFileName)" />

    <RemoveDir Directories="$(QtIntDir)" Condition="Exists($(QtIntDir))" />
  </Target>

  <!-- Prepare -->
  <Target Name="_QtPrepareTask"
          DependsOnTargets="_QtUicPrepareTask;_QtQrcPrepareTask;_QtMocPrepareTask" />

  <!-- Select -->
  <Target Name="_QtSelectTask"
          DependsOnTargets="_QtUicSelectTask;_QtQrcSelectTask;_QtMocSelectTask;_QtSelectByUpdatedTask;_QtSelectBySelectedFilesTask">
    <ItemGroup>
      <QtFileSelected Include="@(QtFile)" Condition="'%(QtFile.Selected)' == 'true'" />
    </ItemGroup>
  </Target>

  <!-- Select::ByUpdatedTask -->
  <Target Name="_QtSelectByUpdatedTask"
          DependsOnTargets="_QtSelectCheckUpdatedTask"
          Condition="'$(SelectedFiles)' == ''">
    <ItemGroup>
      <QtFile Condition="'%(Identity)' != '' and '@(QtFile)' != '' and '@(QtFileUpdated)' != ''">
        <Selected>true</Selected>
      </QtFile>

      <QtFileUpdated Remove="@(QtFileUpdated)" />
    </ItemGroup>
  </Target>
  <Target Name="_QtSelectCheckUpdatedTask"
          Inputs="%(QtFile.Identity);%(QtFile.InputFiles)"
          Outputs="%(QtFile.DependsOnFiles);%(QtFile.GeneratedFile)">
    <CombinePath BasePath="" Paths="%(QtFile.Identity)">
      <Output TaskParameter="CombinedPaths" ItemName="QtFileUpdated"/>
    </CombinePath>
  </Target>

  <!-- Select::BySelectedFilesTask -->
  <Target Name="_QtSelectBySelectedFilesTask"
          Condition="'$(SelectedFiles)' != ''">
    <ItemGroup>
      <QtEnvSelectedFiles Include="$(SelectedFiles)" />

      <QtFile Condition="'%(Identity)' != '' and '@(QtFile)' != '' and '@(QtEnvSelectedFiles)' != ''">
        <Selected>true</Selected>
      </QtFile>

      <QtEnvSelectedFiles Remove="@(QtEnvSelectedFiles)" />
    </ItemGroup>
  </Target>

  <!-- Run -->
  <Target Name="_QtRunTask"
          DependsOnTargets="_QtUicBuildCommandTask;_QtQrcBuildCommandTask;_QtMocBuildCommandTask"
          Condition="'@(QtFileSelected)' != ''">
    <ItemGroup>
      <QtFileWork Include="$(MSBuildThisFileFullPath)">
        <Properties>SeparateWorker=true;ProjectDir=$(ProjectDir);QTDIR=$(QTDIR);QtIntDir=$(QtIntDir);InputFile=%(QtFileSelected.Identity);FileType=%(QtFileSelected.FileType);%(QtFileSelected.MSBuildProperties)</Properties>
      </QtFileWork>
    </ItemGroup>

    <MSBuild Projects="@(QtFileWork)" BuildInParallel="true" StopOnFirstFailure="true" Targets="_QtSeparateWorkTask">
      <Output TaskParameter="TargetOutputs" ItemName="QtFileWorkResult" />
    </MSBuild>
  </Target>

  <!-- ProcessResult -->
  <Target Name="_QtProcessResultTask"
          DependsOnTargets="_QtUicProcessResultTask;_QtQrcProcessResultTask;_QtMocProcessResultTask"
          Condition="'@(QtFileSelected)' != '' and '$(SelectedFiles)' == ''" />

  <!-- AddSource -->
  <Target Name="_QtAddSourceTask"
          DependsOnTargets="_QtAddSource_Clear;_QtUicAddSourceTask;_QtQrcAddSourceTask;_QtMocAddSourceTask;_QtAddSource_Readd"
          Condition="'$(SelectedFiles)' == ''" />
  <Target Name="_QtAddSource_Clear">
    <ItemGroup>
      <ClCompileCache Include="@(ClCompile)" />
      <ClCompile Remove="@(ClCompile)" />
    </ItemGroup>
  </Target>
  <Target Name="_QtAddSource_Readd">
    <ItemGroup>
      <ClCompile Include="@(ClCompileCache)" />
      <ClCompileCache Remove="@(ClCompileCache)" />
    </ItemGroup>
  </Target>

  <!-- CheckCache -->
  <Target Name="_QtCheckCacheTask"
          Condition="'$(SelectedFiles)' == '' and '@(QtFileCheckDiff)' == ''">
    <ItemGroup>
      <QtFileCheck Include="@(QtFile->'%(FileType):%(Identity)')" />
      <QtFileCacheCheck Include="@(QtFileCache->'%(FileType):%(Identity)')" />

      <QtFileCheckDiff Include="@(QtFileCheck)" Exclude="@(QtFileCacheCheck)" />
      <QtFileCheckDiff Include="@(QtFileCacheCheck)" Exclude="@(QtFileCheck)" />

      <QtFileCheck Remove="@(QtFileCheck)" />
      <QtFileCacheCheck Remove="@(QtFileCacheCheck)" />
    </ItemGroup>
  </Target>

  <!-- WriteCache -->
  <Target Name="_QtWriteCacheTask"
          DependsOnTargets="_QtUicWriteCacheTask;_QtQrcWriteCacheTask;_QtMocWriteCacheTask"
          Condition="'$(SelectedFiles)' == '' and ('@(QtFileSelected)' != '' or '@(QtFileCheckDiff)' != '')">
    <ItemGroup>
      <QtCacheAll Include="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;" />
      <QtCacheAll Include="&lt;Project xmlns=&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot; ToolsVersion=&quot;4.0&quot; DefaultTargets=&quot;Build&quot;&gt;" />
      <QtCacheAll Include="&lt;ItemGroup&gt;" />
      <QtCacheAll Include="@(QtCache_ItemGroup)" />
      <QtCacheAll Include="&lt;/ItemGroup&gt;" />
      <QtCacheAll Include="&lt;/Project&gt;" />
    </ItemGroup>

    <WriteLinesToFile File="$(QtCacheFileName)"
                      Lines="@(QtCacheAll)"
                      Overwrite="true" />

    <ItemGroup>
      <QtCache_ItemGroup Remove="@(QtCache_ItemGroup)" />
      <QtCacheAll Remove="@(QtCacheAll)" />
    </ItemGroup> 
  </Target>

  <!-- SeparateWork -->
  <Target Name="_QtSeparateWorkTask"
          Outputs="@(QtSeparateWorkResult)"
          DependsOnTargets="_QtSeparateWorkCreateItemTask;_$(FileType)SeparateWorkTask" />
  <Target Name="_QtSeparateWorkCreateItemTask">
    <CreateItem Include="$(InputFile)"
                AdditionalMetadata="FileType=$(FileType)">
      <Output TaskParameter="Include"
              ItemName="$(FileType)" />
    </CreateItem>
  </Target>

  <!-- ========== Uic ========== -->

  <!-- Uic::Prepare -->
  <Target Name="_QtUicPrepareTask" />

  <!-- Uic::Select -->
  <Target Name="_QtUicSelectTask">
    <ItemGroup>
      <QtFile Include="@(QtUic)">
        <FileType>QtUic</FileType>
      </QtFile>
    </ItemGroup>
  </Target>

  <!-- Uic::BuildCommand -->
  <Target Name="_QtUicBuildCommandTask" />

  <!-- Uic::ProcessResult -->
  <Target Name="_QtUicProcessResultTask" />

  <!-- Uic::AddSource -->
  <Target Name="_QtUicAddSourceTask">
    <ItemGroup>
      <ClInclude Include="@(QtUic->'%(GeneratedFile)')">
        <QtGeneratedFile>true</QtGeneratedFile>
      </ClInclude>
    </ItemGroup>
  </Target>

  <!-- Uic::WriteCache -->
  <Target Name="_QtUicWriteCacheTask" />

  <!-- Uic::CleanupPrepare -->
  <Target Name="_QtUicCleanupPrepareTask" />

  <!-- Uic::Cleanup -->
  <Target Name="_QtUicCleanupTask">
    <Delete Files="@(QtUic->'%(GeneratedFile)')" />
  </Target>

  <!-- Uic::SeparateWork -->
  <Target Name="_QtUicSeparateWorkTask"
          DependsOnTargets="_QtUicExec" />
  <Target Name="_QtUicExec">
    <Exec Command="&quot;%(QtUic.Tool)&quot; &quot;%(QtUic.Identity)&quot; -o &quot;%(QtUic.GeneratedFile)&quot;"
          Outputs="%(QtUic.GeneratedFile)"
          WorkingDirectory="%(QtUic.ProjectDir)" />
  </Target>

  <!-- ========== Qrc ========== -->

  <!-- Qrc::Prepare -->
  <Target Name="_QtQrcPrepareTask"
          DependsOnTargets="_QtQrcPrepare_ReadCache" />
  <Target Name="_QtQrcPrepare_ReadCache">
    <ItemGroup>
      <QtQrc Condition="'%(Identity)' != '' and '@(QtQrc)' != '' and '@(QtQrcCache)' != ''">
        <CacheHas>true</CacheHas>
        <CacheIncludedFiles>@(QtQrcCache->'%(IncludedFiles)')</CacheIncludedFiles>
      </QtQrc>

      <QtQrcInclude>
        <IncludePath>$([MSBuild]::MakeRelative($(QtIntDir), $(ProjectDir)%(Identity)))</IncludePath>
        <Alias Condition="'%(Alias)'==''">$([MSBuild]::MakeRelative($(ProjectDir)%(BasePath), $(ProjectDir)%(Identity)))</Alias>
        <Lang Condition="'%(Lang)'!=''"> lang=&quot;%(Lang)&quot;</Lang>
      </QtQrcInclude>
      <QtQrcInclude>
        <Alias Condition="'%(Prefix)'!=''">%(Prefix)/%(Alias)</Alias>
      </QtQrcInclude>
    </ItemGroup>
  </Target>

  <!-- Qrc::Select -->
  <Target Name="_QtQrcSelectTask"
          DependsOnTargets="_QtQrcSelect_HandleQtQrcInclude">
    <ItemGroup>
      <QtQrc>
        <Selected Condition="'%(QtQrc.CacheHas)' != 'true'">true</Selected>
        <InputFiles Condition="'%(QtQrc.CacheIncludedFiles)' != ''">%(QtQrc.CacheIncludedFiles)</InputFiles>
      </QtQrc>
    </ItemGroup>

    <ItemGroup>
      <QtQrcIncludeDiff Remove="@(QtQrcIncludeDiff)" />

      <QtFile Include="@(QtQrc)">
        <FileType>QtQrc</FileType>
      </QtFile>
      <QtFileCache Include="@(QtQrcCache)">
        <FileType>QtQrc</FileType>
      </QtFileCache>
    </ItemGroup>
  </Target>
  <Target Name="_QtQrcSelect_HandleQtQrcInclude"
          Condition="'@(QtQrcInclude)' != ''">
    <ItemGroup>
      <QtQrcIncludeCache Include="%(QtQrc.CacheIncludedFiles)" Condition="'%(QtQrc.Identity)' == '$(QtIntDir)$(QtQrcIncludeFileName)'" />

      <QtQrcIncludeDiff Include="@(QtQrcIncludeCache)" Exclude="@(QtQrcInclude)" />
      <QtQrcIncludeDiff Include="@(QtQrcInclude)" Exclude="@(QtQrcIncludeCache)" />
    </ItemGroup>

    <ItemGroup Condition="'@(QtQrcIncludeDiff)' != ''">
      <QtQrcIncludeFileContent Include="&lt;RCC&gt;" />
      <QtQrcIncludeFileContent Include="&lt;qresource%(QtQrcInclude.Lang)&gt;&lt;file alias=&quot;$([System.String]::new(%(QtQrcInclude.Alias)).Replace('\', '/'))&quot;&gt;$([System.String]::new(%(QtQrcInclude.IncludePath)).Replace('\', '/'))&lt;/file&gt;&lt;/qresource&gt;" />
      <QtQrcIncludeFileContent Include="&lt;/RCC&gt;" />
    </ItemGroup>

    <WriteLinesToFile File="$(QtIntDir)$(QtQrcIncludeFileName)"
                      Lines="@(QtQrcIncludeFileContent)"
                      Overwrite="true"
                      Condition="'@(QtQrcIncludeFileContent)' != ''"/>

    <ItemGroup>
      <QtQrcIncludeFileContent Remove="@QtQrcIncludeFileContent" />
      <QtQrcIncludeDiff Remove="@(QtQrcIncludeDiff)" />
      <QtQrcIncludeCache Remove="@(QtQrcIncludeCache)" />
    </ItemGroup>
  </Target>

  <!-- Qrc::BuildCommand -->
  <Target Name="_QtQrcBuildCommandTask" />

  <!-- Qrc::ProcessResult -->
  <Target Name="_QtQrcProcessResultTask">
    <ItemGroup>
      <QtQrc Condition="'%(Identity)' != '' and '@(QtQrc)' != '' and '@(QtFileWorkResult)' != '' and '%(QtFileWorkResult.FileType)' == 'QtQrc'">
        <IncludedFiles>@(QtFileWorkResult->'%(IncludedFiles)')</IncludedFiles>
      </QtQrc>
    </ItemGroup>
  </Target>

 <!-- Qrc::AddSource -->
  <Target Name="_QtQrcAddSourceTask">
    <ItemGroup>
      <ClCompile Include="@(QtQrc->'%(GeneratedFile)')">
        <QtGeneratedFile>true</QtGeneratedFile>
      </ClCompile>
    </ItemGroup>
  </Target>

 <!-- Qrc::WriteCache -->
  <Target Name="_QtQrcWriteCacheTask"
          DependsOnTargets="_QtQrcWriteCache_GenerateCacheItem" />
  <Target Name="_QtQrcWriteCache_GenerateCacheItem"
          Inputs="%(QtQrc.Identity)"
          Outputs="$(QtCacheFileName)">
    <ItemGroup>
      <QtCache_ItemGroup Include="&lt;QtQrcCache Include=&quot;%(QtQrc.Identity)&quot;&gt;" />
      <QtCache_ItemGroup Include="  &lt;IncludedFiles&gt;$([System.String]::new('%(QtQrc.IncludedFiles)'))&lt;/IncludedFiles&gt;" />
      <QtCache_ItemGroup Include="  &lt;GeneratedFile&gt;%(QtQrc.GeneratedFile)&lt;/GeneratedFile&gt;" />
      <QtCache_ItemGroup Include="&lt;/QtQrcCache&gt;" />
    </ItemGroup>
  </Target>

  <!-- Qrc::CleanupPrepare -->
  <Target Name="_QtQrcCleanupPrepareTask">
    <ItemGroup>
      <ClCompile Include="@(QtQrcCache->'%(GeneratedFile)')">
        <QtQrcCleanupItem>true</QtQrcCleanupItem>
      </ClCompile>
    </ItemGroup>
  </Target>

  <!-- Qrc::Cleanup -->
  <Target Name="_QtQrcCleanupTask">
    <Delete Files="@(QtQrcCache->'%(GeneratedFile)')" />

    <ItemGroup>
      <ClCompile Remove="@(ClCompile)" Condition="'%(ClCompile.QtQrcCleanupItem)' == 'true'" />

      <QtQrcCache Remove="@(QtQrcCache)" />
      <QtQrc>
        <CacheHas></CacheHas>
        <CacheIncludedFiles></CacheIncludedFiles>
      </QtQrc>
    </ItemGroup>
  </Target>

  <!-- Qrc::SeparateWork -->
  <Target Name="_QtQrcSeparateWorkTask"
          DependsOnTargets="_QtQrcGetIncludedFiles;_QtQrcExec;_QtQrcExportResult" />
  <Target Name="_QtQrcGetIncludedFiles"
          Inputs="%(QtQrc.ProjectDir)%(QtQrc.Identity)"
          Outputs="%(QtQrc.ProjectDir)%(QtQrc.Identity).dummy">
    <XmlPeek XmlInputPath="%(QtQrc.ProjectDir)%(QtQrc.Identity)"
             Query="/RCC/qresource/file/text()">
      <Output TaskParameter="Result" ItemName="QtQrcIncludedFiles" />
    </XmlPeek>
    <Message Text="%(QtQrc.Directory)" />

    <ItemGroup>
      <QtQrcIncludedFiles>
        <FullIdentity>%(QtQrc.RelativeDir)%(Identity)</FullIdentity>
      </QtQrcIncludedFiles>

      <QtQrcResult Include="%(QtQrc.Identity)">
        <FileType>QtQrc</FileType>
        <IncludedFiles>@(QtQrcIncludedFiles->'%(FullIdentity)')</IncludedFiles>
      </QtQrcResult>

      <QtQrcIncludedFiles Remove="@(QtQrcIncludedFiles)" />
    </ItemGroup>
  </Target>
  <Target Name="_QtQrcExec">
    <Exec Command="&quot;%(QtQrc.Tool)&quot; &quot;%(QtQrc.Identity)&quot; -name &quot;%(QtQrc.Filename)&quot; -o &quot;%(QtQrc.GeneratedFile)&quot;"
          Outputs="%(QtQrc.GeneratedFile)"
          WorkingDirectory="%(QtQrc.ProjectDir)" />
  </Target>
  <Target Name="_QtQrcExportResult">
    <ItemGroup>
      <QtSeparateWorkResult Include="@(QtQrcResult)" />
    </ItemGroup>
  </Target>

  <!-- ========== Moc ========== -->

  <!-- Moc::Prepare -->
  <Target Name="_QtMocPrepareTask"
          DependsOnTargets="_QtMocPrepare_GenDefault;_QtMocPrepare_GenFiles;_QtMocPrepare_ReadCache" />
  <Target Name="_QtMocPrepare_GenDefault">
    <ItemGroup>
      <ClCompile Include="$(QtMocSingleFileName)">
        <QtMocTemplateMask>true</QtMocTemplateMask>
      </ClCompile>
      <ClCompileDefault Include="@(ClCompile)" Condition="'%(ClCompile.QtMocTemplateMask)' == 'true'" />
      <ClCompile Remove="$(QtMocSingleFileName)" Condition="%(ClCompile.QtMocTemplateMask) == 'true'"/>
    </ItemGroup>

    <PropertyGroup>
      <Qt_PreprocessorDefinitions_Default>@(ClCompileDefault->'%(PreprocessorDefinitions)')</Qt_PreprocessorDefinitions_Default>
      <Qt_AdditionalIncludeDirectories_Default>@(ClCompileDefault->'%(AdditionalIncludeDirectories)')</Qt_AdditionalIncludeDirectories_Default>
      <Qt_UndefinePreprocessorDefinitions_Default>@(ClCompileDefault->'%(UndefinePreprocessorDefinitions)')</Qt_UndefinePreprocessorDefinitions_Default>
    </PropertyGroup>

    <ItemGroup>
      <ClCompileDefault Remove="@(ClCompileDefault)" />
    </ItemGroup>
  </Target>
  <Target Name="_QtMocPrepare_GenFiles">
    <ItemGroup>
      <QtMocHeader Include="%(ClInclude.Identity)"
                   Condition="'%(ClInclude.ExcludedFromBuild)' != 'true'" />
      <QtMocSource Include="%(ClCompile.Identity)"
                   Condition="'%(ClCompile.ExcludedFromBuild)' != 'true'">
        <AdditionalIncludeDirectories>%(ClCompile.AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
        <PreprocessorDefinitions>%(ClCompile.PreprocessorDefinitions)</PreprocessorDefinitions>
        <UndefinePreprocessorDefinitions>%(ClCompile.UndefinePreprocessorDefinitions)</UndefinePreprocessorDefinitions>
      </QtMocSource>
    </ItemGroup>
  </Target>
  <Target Name="_QtMocPrepare_ReadCache">
    <ItemGroup>
      <QtMocHeader Condition="'%(Identity)' != '' and '@(QtMocHeader)' != '' and '@(QtMocHeaderCache)' != ''">
        <CacheEnable>@(QtMocHeaderCache->'%(Enable)')</CacheEnable>
        <CacheGeneratedFile>@(QtMocHeaderCache->'%(GeneratedFile)')</CacheGeneratedFile>
        <CacheIncludedInSource>@(QtMocHeaderCache->'%(IncludedInSource)')</CacheIncludedInSource>
      </QtMocHeader>
      <QtMocSource Condition="'%(Identity)' != '' and '@(QtMocSource)' != '' and '@(QtMocSourceCache)' != ''">
        <CacheIncludedHeader>@(QtMocSourceCache->'%(IncludedHeader)')</CacheIncludedHeader>
        <CacheEnable>@(QtMocSourceCache->'%(Enable)')</CacheEnable>
        <CacheGeneratedFile>@(QtMocSourceCache->'%(GeneratedFile)')</CacheGeneratedFile>
      </QtMocSource>
    </ItemGroup>
  </Target>

  <!-- Moc::Select -->
  <Target Name="_QtMocSelectTask">
    <ItemGroup>
      <QtMocHeader>
        <Selected Condition="'%(QtMocHeader.CacheEnable)' == ''">true</Selected>
        <DependsOnFiles Condition="'%(QtMocHeader.CacheEnable)' != ''">$(QtCacheFileName)</DependsOnFiles>
        <DependsOnFiles Condition="'%(QtMocHeader.CacheEnable)' == 'true'">%(QtMocHeader.CacheGeneratedFile)</DependsOnFiles>
      </QtMocHeader>
      <QtMocSource>
        <Selected Condition="'%(QtMocSource.CacheEnable)' == ''">true</Selected>
        <DependsOnFiles Condition="'%(QtMocSource.CacheEnable)' != ''">$(QtCacheFileName)</DependsOnFiles>
        <DependsOnFiles Condition="'%(QtMocSource.CacheEnable)' == 'true'">%(QtMocSource.CacheGeneratedFile)</DependsOnFiles>
      </QtMocSource>

      <QtFile Include="@(QtMocHeader)">
        <FileType>QtMocHeader</FileType>
      </QtFile>
      <QtFile Include="@(QtMocSource)">
        <FileType>QtMocSource</FileType>
      </QtFile>
      <QtFileCache Include="@(QtMocHeaderCache)">
        <FileType>QtMocHeader</FileType>
      </QtFileCache>
      <QtFileCache Include="@(QtMocSourceCache)">
        <FileType>QtMocSource</FileType>
      </QtFileCache>
    </ItemGroup>
  </Target>

  <!-- Moc::BuildCommand -->
  <Target Name="_QtMocBuildCommandTask">
    <ItemGroup>
      <QtFileSelected Condition="'%(QtFileSelected.FileType)' == 'QtMocHeader'">
        <MSBuildProperties>QtMocIncludePaths=$(Qt_AdditionalIncludeDirectories_Default);QtMocPreprocessorDefinitions=$([System.String]::new('$(Qt_PreprocessorDefinitions_Default)').Replace('%25', '%2525').Replace('=', '%253D'));QtMocUndefinePreprocessorDefinitions=$(Qt_UndefinePreprocessorDefinitions_Default)</MSBuildProperties>
      </QtFileSelected>
      <QtFileSelected Condition="'%(QtFileSelected.FileType)' == 'QtMocSource'">
        <MSBuildProperties>QtMocIncludePaths=%(QtFileSelected.AdditionalIncludeDirectories);QtMocPreprocessorDefinitions=$([System.String]::new('%(QtFileSelected.PreprocessorDefinitions)').Replace('%25', '%2525').Replace('=', '%253D'));QtMocUndefinePreprocessorDefinitions=%(QtFileSelected.UndefinePreprocessorDefinitions)</MSBuildProperties>
      </QtFileSelected>
    </ItemGroup>
  </Target>

  <!-- Moc::ProcessResult -->
  <Target Name="_QtMocProcessResultTask">
    <ItemGroup>
      <QtMocHeader Condition="'%(Identity)' != '' and '@(QtMocHeader)' != '' and '@(QtFileWorkResult)' != '' and @(QtFileWorkResult->'%(FileType)') == 'QtMocHeader'">
        <Enable>@(QtFileWorkResult->'%(Enable)')</Enable>
        <GeneratedFile Condition="@(QtFileWorkResult->'%(GeneratedFile)') != ''">@(QtFileWorkResult->'%(GeneratedFile)')</GeneratedFile>
      </QtMocHeader>
      <QtMocSource Condition="'%(Identity)' != '' and '@(QtMocSource)' != '' and '@(QtFileWorkResult)' != '' and @(QtFileWorkResult->'%(FileType)') == 'QtMocSource'">
        <IncludedHeader Condition="@(QtFileWorkResult->'%(IncludedHeader)') != ''">@(QtFileWorkResult->'%(IncludedHeader)')</IncludedHeader>
        <Enable>@(QtFileWorkResult->'%(Enable)')</Enable>
        <GeneratedFile Condition="@(QtFileWorkResult->'%(GeneratedFile)') != ''">@(QtFileWorkResult->'%(GeneratedFile)')</GeneratedFile>
      </QtMocSource>
    </ItemGroup>
  </Target>

  <!-- Moc::AddSource -->
  <Target Name="_QtMocAddSourceTask"
          DependsOnTargets="_QtMocAddSource_MergeUnchanged;_QtMocAddSource_WriteMocAll">
    <ItemGroup Condition="'$(QtMocSingleFileMode)' != 'true'">
      <ClCompile Include="@(QtMocHeaderToCompile)"/>
    </ItemGroup>
    <ItemGroup Condition="'$(QtMocSingleFileMode)' == 'true' and '@(QtMocHeaderToCompile)' != ''">
      <ClCompile Include="$(QtMocSingleFileName)">
        <QtGeneratedFile>true</QtGeneratedFile>
      </ClCompile>
      <QtDebug Include="@(ClCompile)"></QtDebug>
    </ItemGroup>
  </Target>
  <Target Name="_QtMocAddSource_MergeUnchanged">
    <ItemGroup>
      <QtMocHeader Condition="'%(QtMocHeader.Selected)' != 'true'">
        <Enable>%(QtMocHeader.CacheEnable)</Enable>
        <GeneratedFile Condition="'%(QtMocHeader.CacheGeneratedFile)' != ''">%(QtMocHeader.CacheGeneratedFile)</GeneratedFile>
      </QtMocHeader>
      <QtMocSource Condition="'%(QtMocSource.Selected)' != 'true'">
        <IncludedHeader Condition="'%(QtMocSource.CacheIncludedHeader)' != ''">%(QtMocSource.CacheIncludedHeader)</IncludedHeader>
        <Enable>%(QtMocSource.CacheEnable)</Enable>
        <GeneratedFile Condition="'%(QtMocSource.CacheGeneratedFile)' != ''">%(QtMocSource.CacheGeneratedFile)</GeneratedFile>
      </QtMocSource>

      <QtMocHeaderIncludedInSource Include="%(QtMocSource.IncludedHeader)" />

      <QtMocHeader Condition="'%(Identity)' != '' and '@(QtMocHeader)' != '' and '@(QtMocHeaderIncludedInSource)' != ''">
        <IncludedInSource>true</IncludedInSource>
      </QtMocHeader>

      <QtMocHeaderToCompile Include="%(QtMocHeader.GeneratedFile)" Condition="'%(QtMocHeader.Enable)' == 'true' and '%(QtMocHeader.IncludedInSource)' != 'true'" />

      <QtMocHeaderIncludedInSource Remove="@(QtMocHeaderIncludedInSource)" />
    </ItemGroup>
  </Target>
  <Target Name="_QtMocAddSource_WriteMocAll"
          Condition="'$(QtMocSingleFileMode)' == 'true'">
    <ItemGroup>
      <QtMocHeaderToCompileCache Include="%(QtMocHeaderCache.GeneratedFile)" Condition="'%(QtMocHeaderCache.Enable)' == 'true' and '%(QtMocHeaderCache.IncludedInSource)' != 'true'" />

      <QtMocHeaderToCompileDiff Include="@(QtMocHeaderToCompileCache)" Exclude="@(QtMocHeaderToCompile)" />
      <QtMocHeaderToCompileDiff Include="@(QtMocHeaderToCompile)" Exclude="@(QtMocHeaderToCompileCache)" />
    </ItemGroup>

    <ItemGroup Condition="'@(QtMocHeaderToCompileDiff)' != ''">
      <QtMocSingleFileContent Include="#include &quot;%(QtMocHeaderToCompile.Filename)%(QtMocHeaderToCompile.Extension)&quot;" />
    </ItemGroup>

    <WriteLinesToFile File="$(QtMocSingleFileName)"
                      Lines="@(QtMocSingleFileContent)"
                      Condition="'@(QtMocSingleFileContent)' != ''"
                      Overwrite="true" />

    <ItemGroup>
      <QtMocSingleFileContent Remove="@(QtMocSingleFileContent)" />
      <QtMocHeaderToCompileCache Remove="@(QtMocHeaderToCompileCache)" />
      <QtMocHeaderToCompileDiff Remove="@(QtMocHeaderToCompileDiff)" />
    </ItemGroup>
  </Target>

  <!-- Moc::WriteCache -->
  <Target Name="_QtMocWriteCacheTask"
          DependsOnTargets="_QtMocWriteCache_GenerateCacheHeaderItems;_QtMocWriteCache_GenerateCacheSourceItems" />
  <Target Name="_QtMocWriteCache_GenerateCacheHeaderItems"
          Inputs="%(QtMocHeader.Identity)"
          Outputs="$(QtCacheFileName)">
    <ItemGroup>
      <QtCache_ItemGroup Include="&lt;QtMocHeaderCache Include=&quot;%(QtMocHeader.Identity)&quot;&gt;" />
      <QtCache_ItemGroup Include="  &lt;Enable&gt;%(QtMocHeader.Enable)&lt;/Enable&gt;" />
      <QtCache_ItemGroup Include="  &lt;GeneratedFile&gt;%(QtMocHeader.GeneratedFile)&lt;/GeneratedFile&gt;" Condition="'%(QtMocHeader.Enable)' == 'true'" />
      <QtCache_ItemGroup Include="&lt;/QtMocHeaderCache&gt;" />
    </ItemGroup>
  </Target>
  <Target Name="_QtMocWriteCache_GenerateCacheSourceItems"
          Inputs="%(QtMocSource.Identity)"
          Outputs="$(QtCacheFileName)">
    <ItemGroup>
      <QtCache_ItemGroup Include="&lt;QtMocSourceCache Include=&quot;%(QtMocSource.Identity)&quot;&gt;" />
      <QtCache_ItemGroup Include="  &lt;Enable&gt;%(QtMocSource.Enable)&lt;/Enable&gt;" />
      <QtCache_ItemGroup Include="  &lt;GeneratedFile&gt;%(QtMocSource.GeneratedFile)&lt;/GeneratedFile&gt;" Condition="'%(QtMocSource.GeneratedFile)' != ''" />
      <QtCache_ItemGroup Include="  &lt;IncludedHeader&gt;%(QtMocSource.IncludedHeader)&lt;/IncludedHeader&gt;" Condition="'%(QtMocSource.IncludedHeader)' != ''" />
      <QtCache_ItemGroup Include="&lt;/QtMocSourceCache&gt;" />
    </ItemGroup>
  </Target>

  <!-- Moc::CleanupPrepare -->
  <Target Name="_QtMocCleanupPrepareTask">
    <ItemGroup>
      <ClCompile Include="$(QtMocSingleFileName)">
        <QtMocCleanupItem>true</QtMocCleanupItem>
      </ClCompile>
      <ClCompile Include="%(QtMocHeaderCache.GeneratedFile)" Condition="'%(QtMocHeaderCache.Enable)' == 'true' and '%(QtMocHeaderCache.IncludedInSource)' != 'true'">
        <QtMocCleanupItem>true</QtMocCleanupItem>
      </ClCompile>
    </ItemGroup>
  </Target>

  <!-- Moc::Cleanup -->
  <Target Name="_QtMocCleanupTask">
    <Delete Files="@(QtMocHeaderCache->'%(GeneratedFile)');@(QtMocSourceCache->'%(GeneratedFile)');$(QtMocSingleFileName)" />

    <ItemGroup>
      <ClCompile Remove="@(ClCompile)" Condition="'%(ClCompile.QtMocCleanupItem)' == 'true'" />

      <QtMocHeaderCache Remove="@(QtMocHeaderCache)" />
      <QtMocSourceCache Remove="@(QtMocSourceCache)" />
      <QtMocHeader>
        <CacheEnable></CacheEnable>
        <CacheGeneratedFile></CacheGeneratedFile>
        <CacheIncludedInSource></CacheIncludedInSource>
      </QtMocHeader>
      <QtMocSource>
        <CacheIncludedHeader></CacheIncludedHeader>
        <CacheEnable></CacheEnable>
        <CacheGeneratedFile></CacheGeneratedFile>
      </QtMocSource>
    </ItemGroup>
  </Target>

  <!-- Moc::HeaderSeparateWork -->
  <Target Name="_QtMocHeaderSeparateWorkTask"
          DependsOnTargets="_QtMocSeparateCreateItemGroup;_QtMocCheckHeader;_QtMocCheck;_QtMocExec;_QtMocExportResult" />
  <!-- Moc::SourceSeparateWork -->
  <Target Name="_QtMocSourceSeparateWorkTask"
          DependsOnTargets="_QtMocSeparateCreateItemGroup;_QtMocCheckSource;_QtMocCheck;_QtMocExec;_QtMocExportResult "/>

  <Target Name="_QtMocSeparateCreateItemGroup">
    <ItemGroup>
      <QtMoc Include="@(QtMocHeader);@(QtMocSource)" />
    </ItemGroup>
  </Target>

  <Target Name="_QtMocCheck">
    <ItemGroup>
      <QtMocResult Condition="'%(QtMocResult.Enable)' != 'true'">
        <Enable>false</Enable>
      </QtMocResult>

      <QtMoc Condition="'%(Identity)' != '' and '@(QtMoc)' != '' and  '@(QtMocResult)' != ''">
        <Enable>@(QtMocResult->'%(Enable)')</Enable>
      </QtMoc>

      <QtMoc Condition="'%(QtMoc.Enable)' == 'true'">
        <GeneratedFile Condition="'%(QtMoc.FileType)' == 'QtMocHeader'">%(QtMoc.HeaderGeneratedFile)</GeneratedFile>
        <GeneratedFile Condition="'%(QtMoc.FileType)' == 'QtMocSource'">%(QtMoc.SourceGeneratedFile)</GeneratedFile>
      </QtMoc>

      <QtMocResult Condition="'%(Identity)' != '' and '@(QtMocResult)' != '' and '@(QtMoc)' != ''">
        <FileType>@(QtMoc->'%(FileType)')</FileType>
        <GeneratedFile Condition="@(QtMoc->'%(GeneratedFile)') != ''">@(QtMoc->'%(GeneratedFile)')</GeneratedFile>
      </QtMocResult>
    </ItemGroup>
  </Target>

  <Target Name="_QtMocCheckHeader"
          Inputs="%(QtMoc.Identity)"
          Outputs="%(QtMoc.Identity).dummy">
    <PropertyGroup>
      <QtMocCheck_Current Condition="'%(QtMoc.FileType)' == 'QtMocHeader'">%(QtMoc.Identity)</QtMocCheck_Current>
      <QtMocCheck_CurrentFullPath Condition="'$(QtMocCheck_Current)' != ''">%(QtMoc.ProjectDir)\%(QtMoc.Identity)</QtMocCheck_CurrentFullPath>
    </PropertyGroup>

    <ReadLinesFromFile File="$(QtMocCheck_CurrentFullPath)" Condition="'$(QtMocCheck_Current)' != ''">
      <Output TaskParameter="Lines" ItemName="LinesFromReadFile"/>
    </ReadLinesFromFile>

    <ItemGroup Condition="'$(QtMocCheck_Current)' != ''">
      <!-- Find Q_OBJECT or Q_GADGET in file -->
      <QtMocEnabled Include="@(LinesFromReadFile)" Condition="$([System.Text.RegularExpressions.Regex]::IsMatch('%(Identity)', '\bQ_OBJECT(?!_FAKE)\b')) or $([System.String]::new('%(Identity)').Contains('Q_GADGET'))" />

      <QtMocResult Include="$(QtMocCheck_Current)">
        <Enable Condition="'@(QtMocEnabled)' != ''">true</Enable>
      </QtMocResult>

      <QtMocEnabled Remove="@(QtMocEnabled)" />
      <LinesFromReadFile Remove="@(LinesFromReadFile)" />
    </ItemGroup>

    <PropertyGroup>
      <QtMocCheck_CurrentFullPath></QtMocCheck_CurrentFullPath>
      <QtMocCheck_Current></QtMocCheck_Current>
    </PropertyGroup>
  </Target>

  <Target Name="_QtMocCheckSource"
          Inputs="%(QtMoc.Identity)"
          Outputs="%(QtMoc.Identity).dummy">
    <PropertyGroup>
      <QtMocCheck_Current Condition="'%(QtMoc.FileType)' == 'QtMocSource'">%(QtMoc.Identity)</QtMocCheck_Current>
      <QtMocCheck_CurrentFullPath Condition="'$(QtMocCheck_Current)' != ''">%(QtMoc.ProjectDir)\%(QtMoc.Identity)</QtMocCheck_CurrentFullPath>
      <QtMocCheck_CurrentFilename Condition="'$(QtMocCheck_Current)' != ''">%(QtMoc.Filename)</QtMocCheck_CurrentFilename>
    </PropertyGroup>

    <ReadLinesFromFile File="$(QtMocCheck_CurrentFullPath)" Condition="'$(QtMocCheck_Current)' != ''">
      <Output TaskParameter="Lines" ItemName="LinesFromReadFile"/>
    </ReadLinesFromFile>

    <ItemGroup Condition="'$(QtMocCheck_Current)' != ''">
      <!-- Set QtMoc if the file contains #include %(Filename).moc -->
      <QtMocEnabled Include="@(LinesFromReadFile)" Condition="$([System.Text.RegularExpressions.Regex]::IsMatch('%(Identity)', '^\s*\#include\s*[&quot;&lt;]$(QtMocCheck_CurrentFilename)\.moc[&quot;&gt;]\s*$'))" />

      <!-- Find moc header in source file -->
      <QtMocIncludedHeader Include="@(LinesFromReadFile)" Condition="$([System.Text.RegularExpressions.Regex]::IsMatch('%(Identity)', '^\s*\#include\s*[&quot;&lt;]moc_(.+)\.cpp[&quot;&gt;]\s*$'))">
        <RawFilename>$([System.Text.RegularExpressions.Regex]::Replace('%(Identity)', '^\s*\#include\s*[&quot;&lt;]moc_(.+)\.cpp[&quot;&gt;]\s*$', '%241.h'))</RawFilename>
      </QtMocIncludedHeader>

      <QtMocResult Include="$(QtMocCheck_Current)">
        <IncludedHeader>@(QtMocIncludedHeader->'%(RawFilename)')</IncludedHeader>
        <Enable Condition="'@(QtMocEnabled)' != ''">true</Enable>
      </QtMocResult>

      <QtMocIncludedHeader Remove="@(QtMocIncludedHeader)" />
      <QtMocEnabled Remove="@(QtMocEnabled)" />
      <LinesFromReadFile Remove="@(LinesFromReadFile)" />
    </ItemGroup>

    <PropertyGroup>
      <QtMocCheck_Current></QtMocCheck_Current>
      <QtMocCheck_CurrentFullPath></QtMocCheck_CurrentFullPath>
      <QtMocCheck_CurrentFilename></QtMocCheck_CurrentFilename>
    </PropertyGroup>
  </Target>

  <Target Name="_QtMocExec"
          Condition="'@(QtMoc)' != ''">
    <Message Importance="high" Text="%(QtMoc.ExecutionDescription)" Condition="'%(QtMoc.Enable)' == 'true'" />

    <Exec Command="&quot;%(QtMoc.Tool)&quot; &quot;%(QtMoc.Identity)&quot; -o &quot;%(QtMoc.GeneratedFile)&quot; %(QtMoc.Param)"
          Outputs="%(QtMoc.GeneratedFile)"
          WorkingDirectory="%(QtMoc.ProjectDir)"
          Condition="'%(QtMoc.Enable)' == 'true'" />

    <!--<QtMoc Condition="'%(QtMoc.Enable)' == 'true'"
           GeneratedFile="%(QtMoc.GeneratedFile)"
           IncludePaths="%(QtMoc.IncludePaths)"
           DryRun="%(QtMoc.DryRun)"
           PreprocessorDefinitions="%(QtMoc.PreprocessorDefinitions)"
           UndefinePreprocessorDefinitions="%(QtMoc.UndefinePreprocessorDefinitions)"
           NoIncludeStatement="%(QtMoc.NoIncludeStatement)"
           IncludePathPrefix="%(QtMoc.IncludePathPrefix)"
           ForcedIncludeFiles="%(QtMoc.ForcedIncludeFiles)"
           NoWarnings="%(QtMoc.NoWarnings)"
           CommandLineTemplate="%(QtMoc.CommandLineTemplate)"
           AdditionalOptions="%(QtMoc.AdditionalOptions)"
           Inputs="%(QtMoc.Identity)" />-->
  </Target>

  <Target Name="_QtMocExportResult">
    <ItemGroup>
      <QtSeparateWorkResult Include="@(QtMocResult)" />
    </ItemGroup>
  </Target>

  <Target Name="_QtUicSeparateWorker"
          DependsOnTargets="_QtUicCreateItemGroup;_QtUicRun" />
  <Target Name="_QtUicCreateItemGroup">
    <ItemGroup>
      <QtUic Include="$(InputFile)" />
    </ItemGroup>
  </Target>
  <Target Name="_QtUicRun"
          Condition="'@(QtUic)' != ''">
    <Message Importance="high" Text="%(QtUic.ExecutionDescription)" Condition="'%(QtUic.Enable)' == 'true'" />

    <Exec Command="&quot;%(QtUic.Tool)&quot; &quot;%(QtUic.Identity)&quot; -o &quot;%(QtUic.GeneratedFile)&quot;"
          Outputs="%(QtUic.GeneratedFile)"
          WorkingDirectory="%(QtUic.ProjectDir)"
          Condition="'%(QtUic.Enable)' == 'true'" />
  </Target>

  <Target Name="_QtCopyLib"
          BeforeTargets="PostBuildEvent"
          Condition="'$(QtBootstrap)'!='true'"
          Inputs="$(RelativeQTDIR)\bin\%(QtLib.Library)" Outputs="$(OutDir)%(QtLib.Library)">
      <Copy
          SourceFiles="$(RelativeQTDIR)\bin\$(OutDirConf)\%(QtLib.Library)"
          DestinationFolder="$(OutDir)"
        />
      <Message Importance="high" Text="Copy %(QtLib.Library)" />
  </Target>
</Project>
